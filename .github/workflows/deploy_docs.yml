name: Build and Deploy Sphinx Docs

on:
  push:
    tags:
      - 'v*'  # Passe den Branch an, bei dem der Workflow ausgefÃ¼hrt werden soll.

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout Repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Python Environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Passe die Python-Version an

      # Install Dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx_rtd_theme paramiko scp  # Installiere Sphinx und SSH-Tools
          pip install -r requirements.txt

      # Set Tag in Sphinx config
      - name: Set Tag Version in Sphinx config
        run: |
          echo "Setting version to ${GITHUB_REF#refs/tags/}"
          sed -i "s/^version = .*/version = '${GITHUB_REF#refs/tags/}'/" Doc/source/conf.py
          sed -i "s/^release = .*/release = '${GITHUB_REF#refs/tags/}'/" Doc/source/conf.py

      # Build Sphinx Documentation
      - name: Build Sphinx Documentation
        run: |
          cd Doc
          sphinx-build -b html source/ _build/html  # Passe die Pfade an
          cd ..

      # Upload Build to Server
      - name: Upload to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIV_KEY }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
          
        run: |
          echo "Home directory: $HOME"
          echo "Available disk space"
          

          mkdir -p ~/.ssh
          echo ".ssh created"
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          cat ~/.ssh/id_rsa
          echo "priv key copied"
          chmod 600 ~/.ssh/id_rsa
          echo "privileges set"
          ssh-keyscan -p $SERVER_PORT -H $SERVER_HOST >> ~/.ssh/known_hosts
          echo "added to keychain"
          scp -P $SERVER_PORT -r Doc/_build/html/* $SERVER_USER@$SERVER_HOST:$DEPLOY_PATH
          echo "data copied"
