name: Create Release and Upload

on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Determine next version
        id: get_version
        run: |
          latest_tag=$(git tag --list | sort -V | tail -n 1)
          echo "Latest tag: $latest_tag"
          if [ -z "$latest_tag" ]; then
             next_version="v1.0.0"
          else
             major=$(echo $latest_tag | cut -d. -f1 | tr -d 'v')
             minor=$(echo $latest_tag | cut -d. -f2)
             patch=$(echo $latest_tag | cut -d. -f3)
             next_patch=$((patch + 1))
             next_version="v$major.$minor.$next_patch"
          fi
          echo "Next version: $next_version"
          echo "next_version=$next_version" >> $GITHUB_ENV
    
      - name: Create new tag
        run: |
          git tag ${{ env.next_version }}
          git push origin ${{ env.next_version }}

        
      - name: Create tar.gz and tar.bz2 for Server
        run: |
          tar -czvf WM2_Server_${{ env.next_version }}.tar.gz Server
          tar -cjvf WM2_Server_${{ env.next_version }}.tar.bz2 Server

      - name: Create tar.gz and tar.bz2 for Pi
        run: |
          tar -czvf WM2_Pi_${{ env.next_version }}.tar.gz Pi
          tar -cjvf WM2_Pi_${{ env.next_version }}.tar.bz2 Pi

      - name: Generate Checksums
        run: |
          sha256sum WM2_Server_${{ env.next_version }}.tar.gz > WM2_Server_${{ env.next_version }}.tar.gz.sha256
          sha256sum WM2_Server_${{ env.next_version }}.tar.bz2 > WM2_Server_${{ env.next_version }}.tar.bz2.sha256
          sha256sum WM2_Pi_${{ env.next_version }}.tar.gz > WM2_Pi_${{ env.next_version }}.tar.gz.sha256
          sha256sum WM2_Pi_${{ env.next_version }}.tar.bz2 > WM2_Pi_${{ env.next_version }}.tar.bz2.sha256

      - name: Create index.html
        run: |
          echo "<html><body><h1>Release ${{ env.next_version }}</h1><ul>" > env.next_version.html
          echo "<li><a href='WM2_Server_${{ env.next_version }}.tar.gz'>WM2_Server_${{ env.next_version }}.tar.gz</a> (<a href='WM2_Server_${{ env.next_version }}.tar.gz.sha256'>sha256</a>)</li>" >> env.next_version.html
          echo "<li><a href='WM2_Server_${{ env.next_version }}.tar.bz2'>WM2_Server_${{ env.next_version }}.tar.bz2</a> (<a href='WM2_Server_${{ env.next_version }}.tar.bz2.sha256'>sha256</a>)</li>" >> env.next_version.html
          echo "<li><a href='WM2_Pi_${{ env.next_version }}.tar.gz'>WM2_Pi_${{ env.next_version }}.tar.gz</a> (<a href='WM2_Pi_${{ env.next_version }}.tar.gz.sha256'>sha256</a>)</li>" >> env.next_version.html
          echo "<li><a href='WM2_Pi_${{ env.next_version }}.tar.bz2'>WM2_Pi_${{ env.next_version }}.tar.bz2</a> (<a href='WM2_Pi_${{ env.next_version }}.tar.bz2.sha256'>sha256</a>)</li>" >> env.next_version.html
          echo "</ul></body></html>" >> env.next_version.html

      - name: Upload to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIV_KEY }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          DEPLOY_PATH: ${{ secrets.CODE_DEPLOY_PATH }}
        run: |
          echo "Home directory: $HOME"
          echo "Available disk space"
          
          mkdir -p ~/.ssh
          echo ".ssh created"
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          cat ~/.ssh/id_rsa
          echo "priv key copied"
          chmod 600 ~/.ssh/id_rsa
          echo "privileges set"
          ssh-keyscan -p $SERVER_PORT -H $SERVER_HOST >> ~/.ssh/known_hosts
          echo "added to keychain"
          scp -P $SERVER_PORT -r WM2_Server_${{ env.next_version }}.tar.gz.sha256 $SERVER_USER@$SERVER_HOST:$DEPLOY_PATH
          scp -P $SERVER_PORT -r WM2_Server_${{ env.next_version }}.tar.bz2.sha256 $SERVER_USER@$SERVER_HOST:$DEPLOY_PATH
          scp -P $SERVER_PORT -r WM2_Pi_${{ env.next_version }}.tar.gz.sha256 $SERVER_USER@$SERVER_HOST:$DEPLOY_PATH
          scp -P $SERVER_PORT -r WM2_Pi_${{ env.next_version }}.tar.bz2.sha256 $SERVER_USER@$SERVER_HOST:$DEPLOY_PATH
          
          scp -P $SERVER_PORT -r WM2_Server_${{ env.next_version }}.tar.gz $SERVER_USER@$SERVER_HOST:$DEPLOY_PATH
          scp -P $SERVER_PORT -r WM2_Server_${{ env.next_version }}.tar.bz2 $SERVER_USER@$SERVER_HOST:$DEPLOY_PATH
          scp -P $SERVER_PORT -r WM2_Pi_${{ env.next_version }}.tar.gz $SERVER_USER@$SERVER_HOST:$DEPLOY_PATH
          scp -P $SERVER_PORT -r WM2_Pi_${{ env.next_version }}.tar.bz2 $SERVER_USER@$SERVER_HOST:$DEPLOY_PATH

          scp -P $SERVER_PORT -r env.next_version.html $SERVER_USER@$SERVER_HOST:$DEPLOY_PATH
          
          echo "data copied"

      
